"---------------------------------------------------------------------------
" Initialize:
"
let g:Config_Main_Home = fnamemodify(expand('<sfile>'), ':p:h:gs?\\?'.(( has('win32') || has('win64'))?'\':'/') . '?')

if &compatible
  set nocompatible
endif

function! s:source_rc(file) abort
  if filereadable(g:Config_Main_Home. '/' . a:file)
    execute 'source ' . g:Config_Main_Home  . '/' . a:file
  endif
endfunction

" Set augroup.
augroup MyAutoCmd
  autocmd!
augroup END

if has('vim_starting')
  call s:source_rc('init.vim')
endif

call s:source_rc('plugins.vim')

call s:source_rc('functions.vim')

if !has('vim_starting')
  call dein#call_hook('source')
  call dein#call_hook('post_source')
  syntax enable
  filetype plugin indent on
endif

"---------------------------------------------------------------------------
" Edit:
"
call s:source_rc('edit.vim')


"---------------------------------------------------------------------------
" View:
"
call s:source_rc('view.vim')

"---------------------------------------------------------------------------
" FileType:
"
autocmd MyAutoCmd FileType,Syntax,BufNewFile,BufNew,BufRead
      \ * call s:my_on_filetype()

function! s:my_on_filetype() abort "{{{
  if &l:filetype == '' && bufname('%') == ''
    return
  endif

  redir => filetype_out
  silent! filetype
  redir END
  if filetype_out =~# 'OFF'
    " Lazy loading
    silent! filetype plugin indent on
    syntax enable
    filetype detect
  endif
endfunction "}}}
call s:my_on_filetype()

"---------------------------------------------------------------------------
" Mappings:
"
call s:source_rc('mappings.vim')

"---------------------------------------------------------------------------
" Commands:
"

" Display diff with the file.
command! -nargs=1 -complete=file Diff vertical diffsplit <args>
" Disable diff mode.
command! -nargs=0 Undiff setlocal nodiff noscrollbind wrap

"---------------------------------------------------------------------------
" Platform:
"

if has('nvim')
  call s:source_rc('neovim.vim')
endif

if IsWindows()
  call s:source_rc('windows.vim')
else
  call s:source_rc('unix.vim')
endif

set helplang& helplang=en,cn

" Default home directory.
let t:cwd = getcwd()

set secure